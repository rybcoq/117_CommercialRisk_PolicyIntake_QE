<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1090,902" sap2010:WorkflowViewState.IdRef="Main_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ac="clr-namespace:ARL_Framework.Configuration;assembly=ARL_Framework" xmlns:ad="clr-namespace:ARL_DataManipulation.Datatypes_Initialization;assembly=ARL_DataManipulation" xmlns:af="clr-namespace:ARL_SystemInteractions.Files_and_Folders_Manipulation;assembly=ARL_SystemInteractions" xmlns:al="clr-namespace:ARL_Framework.Logging_and_Reporting;assembly=ARL_Framework" xmlns:as="clr-namespace:ARL_Mail.SMTP;assembly=ARL_Mail" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>ARL_Framework.Logging_and_Reporting</x:String>
      <x:String>ARL_Framework.Configuration</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>ARL_SystemInteractions.Files_and_Folders_Manipulation</x:String>
      <x:String>ARL_Mail.SMTP</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System.IO</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Windows</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="37">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>ARL_Framework</AssemblyReference>
      <AssemblyReference>ARL_SystemInteractions</AssemblyReference>
      <AssemblyReference>ARL_Mail</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID2}" sap2010:Annotation.AnnotationText="AonRoboticFramework (ARF) ver 2.0&#xA;Additional exclamation marks (causing UiPath validation error) added to all parts of bot where developers input is necessary. &#xA;Carefully read all 'Comment' activities as they provide very useful additional information on how ARF works." DisplayName="State machine" sap:VirtualizedContainerService.HintSize="738,837" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">240,2.5</av:Point>
        <x:Double x:Key="StateContainerWidth">703.5</x:Double>
        <x:Double x:Key="StateContainerHeight">744</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">270,77.5 270,107.5 270.25,107.5 270.25,131</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Clear environment and temp." DisplayName="End state" sap:VirtualizedContainerService.HintSize="134,118" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
      <State.Entry>
        <Sequence DisplayName="End state sequence" sap:VirtualizedContainerService.HintSize="526,1293" sap2010:WorkflowViewState.IdRef="Sequence_14">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" DisplayName="Log end begin" FlagInfo="True" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Logging_32" LogMessage="Finishing execution" />
          <ui:Comment DisplayName="Comment-If send summary" sap:VirtualizedContainerService.HintSize="484,93" sap2010:WorkflowViewState.IdRef="Comment_20" Text="// Summary report send out is being enabled or disabled by changing 'FlagSummaryReport' key in config.json file." />
          <If Condition="[(Not IsNothing(dtSummary)) AndAlso dtSummary.Rows.Count&gt;0]" DisplayName="If send summary" sap:VirtualizedContainerService.HintSize="484,446" sap2010:WorkflowViewState.IdRef="If_5">
            <If.Then>
              <Sequence DisplayName="Save and send" sap:VirtualizedContainerService.HintSize="376,269" sap2010:WorkflowViewState.IdRef="Sequence_55">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="pathReportXLSX" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:AppendRange DataTable="[dtSummary]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="Report" WorkbookPath="[dictConfig(&quot;PathOutputReport&quot;)]" />
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="326,405" sap2010:WorkflowViewState.IdRef="Sequence_60">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <al:SaveSummaryXLSX DisplayName="Save summary XLSX report" DtSummary="[dtSummary]" sap:VirtualizedContainerService.HintSize="284,132" sap2010:WorkflowViewState.IdRef="SaveSummaryXLSX_2" PathReportFolder="[dictConfig(&quot;PathTemp&quot;)]" PathSavedReportFile="[pathReportXLSX]" ProcessName="[dictConfig(&quot;ProcessName&quot;)]" />
                      <as:SendEmailSMTP FlagMailbodyHTML="{x:Null}" MailBcc="{x:Null}" MailBody="{x:Null}" MailCc="{x:Null}" MailSender="{x:Null}" ServerSMTP="{x:Null}" ArrPathAttachment="[{pathReportXLSX}]" DisplayName="Send report mail" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="SendEmailSMTP_2" MailRecipient="[dictConfig(&quot;Asset_BusinessMail&quot;)]" MailSubject="[string.Format(&quot;SUMMARY: {0}&quot;, dictConfig(&quot;ProcessName&quot;))]" />
                      <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" FlagInfo="{x:Null}" DisplayName="Log mail send out" sap:VirtualizedContainerService.HintSize="284,22" sap2010:WorkflowViewState.IdRef="Logging_34" LogMessage="Mail with summary report has been sent" />
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
              </Sequence>
            </If.Then>
          </If>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Clear processing environment end state" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="PROCESS\PR_ClearProcessEnvironment.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <TryCatch DisplayName="TC - clear temp" sap:VirtualizedContainerService.HintSize="484,306" sap2010:WorkflowViewState.IdRef="TryCatch_4">
            <TryCatch.Try>
              <af:ClearDirectory DisplayName="Clear temp directory" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="ClearDirectory_4" PathToBeCleared="[dictConfig(&quot;PathTemp&quot;)]" />
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:NullReferenceException" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:NullReferenceException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:Comment DisplayName="Comment-clear temp" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="Comment_5" Text="This error is generated when config file was not read properly. No action needs to be taken, because executiond did not generate any temp files anyway" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" DisplayName="Log end finish" FlagInfo="True" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Logging_33" LogMessage="Execution finished" />
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">543,331</av:Point>
          <av:Size x:Key="ShapeSize">134,118</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">100</x:Double>
          <x:Double x:Key="StateContainerHeight">25</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </State>
    <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Initialize processing: get settings, launch all applications." DisplayName="Initialize state" sap:VirtualizedContainerService.HintSize="195,118" sap2010:WorkflowViewState.IdRef="State_2">
      <State.Entry>
        <TryCatch DisplayName="TC init" sap:VirtualizedContainerService.HintSize="851,3980" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Variables>
            <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Variable containing mail address of operator used only in case of failing at init state" Name="mailRobotSupport" />
            <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Initial process name taken from project.json file. Value will overwrite placeholder in DictConfig." Name="processName" />
          </TryCatch.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence DisplayName="Initialize" sap:VirtualizedContainerService.HintSize="813,3753" sap2010:WorkflowViewState.IdRef="Sequence_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[dictConfig is Nothing]" DisplayName="If first run" sap:VirtualizedContainerService.HintSize="771,3295" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="First run" sap:VirtualizedContainerService.HintSize="526,3137" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Name of Orchestrator asset containing processes to be cleared - stored in json string pattern" Name="assetNameClearEnvironment" />
                      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Name of Orchestrator asset containing address to json config file" Name="assetNameConfigPath" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Assign main variables and log fields" sap:VirtualizedContainerService.HintSize="484,1221" sap2010:WorkflowViewState.IdRef="Sequence_48">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Automation Team Name" Name="automationTeam" />
                        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Line of business name." Name="lineOfBusiness" />
                        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Name of the Team automation is created for." Name="teamName" />
                        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Code of the process." Name="processCode" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Comment DisplayName="Comment-Assign main static variables for each projects" sap:VirtualizedContainerService.HintSize="431,150" sap2010:WorkflowViewState.IdRef="Comment_18" Text="// Those values must be unchanged and the same for each project. 'processName' is taken from project.json and later added to DictConfig. 'assetNameClearEnvironment' is being loaded from single asset - shared between all ARF 2.0 projects." />
                      <ui:MultipleAssign DisplayName="Assign main static variables for each projects" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[processName]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.Linq.JObject.Parse(New StreamReader("project.json").ReadToEnd)("name").ToString]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[assetNameClearEnvironment]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">0_ClearEnvironmentProcessList</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                      <ui:Comment DisplayName="Comment-Assign main dynamic variables for each project" sap:VirtualizedContainerService.HintSize="431,169" sap2010:WorkflowViewState.IdRef="Comment_8" Text="// Those values must be hardcoded here. 'assetNameConfigPath' is name of the asset that contains path to config.json file. 'mailRobotSupport' is hardcoded mail address whom to send fatal error and it is being replaced to this ones stored in config file as soon as config is correctly loaded." />
                      <ui:MultipleAssign DisplayName="Assign main dynamic variables for each project" sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[assetNameConfigPath]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">REQ-117_PathConfigQE</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[mailRobotSupport]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">tomasz.rybka@aon.com</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                      <ui:Comment DisplayName="Comment-Assign main level log fields" sap:VirtualizedContainerService.HintSize="431,93" sap2010:WorkflowViewState.IdRef="Comment_17" Text="// Standard main level ARF custom log fields. You can add additional log fields according to your needs but *do not delete standard ones*." />
                      <ui:MultipleAssign DisplayName="Assign main level log fields" sap:VirtualizedContainerService.HintSize="431,193" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[automationTeam]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">Krakow Team</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[lineOfBusiness]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">Commercial Risk</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[teamName]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">Policy Intake Team</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[processCode]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">REQ-117</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                      <ui:AddLogFields DisplayName="Add main level log fields" sap:VirtualizedContainerService.HintSize="431,22" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                        <ui:AddLogFields.Fields>
                          <InArgument x:TypeArguments="x:String" x:Key="AutomationTeam">[automationTeam]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="LineOfBusiness">[lineOfBusiness]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="TeamName">[teamName]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[processName]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProcessCode">[processCode]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Technology">UIPATH</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Hostname">[system.Environment.MachineName]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Username">[system.Environment.UserName]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="FrameworkVersion">ARF2.0</InArgument>
                        </ui:AddLogFields.Fields>
                      </ui:AddLogFields>
                    </Sequence>
                    <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" DisplayName="Log init begin-first run" FlagInfo="True" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Logging_25" LogMessage="[&quot;Initializing environment - first run. Screen resolution: &quot; &amp; System.Windows.Forms.Screen.PrimaryScreen.Bounds.Width.ToString &amp; &quot; x &quot; &amp; System.Windows.Forms.Screen.PrimaryScreen.Bounds.Height.ToString &amp; &quot;. Machine time: &quot; &amp; Now.ToString &amp; &quot; of &quot; &amp; System.TimeZone.CurrentTimeZone.StandardName]" />
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Clear environment" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="FRAMEWORK/SU_ClearEnvironment.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="ListProcessesAssetName">[assetNameClearEnvironment]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:Comment DisplayName="Comment-Get config from json file" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="Comment_21" Text="// ARF contains 'config.json' file template which must be configuration start point. Do not remove any entries from there - they are obligatory to make ARF work properly. 'config_comments.json' file contains explanation about each key function. Before publishing to production remember to pull out config file from bot package to shared location - according to Aon standards." />
                    <ac:GetJsonConfig AssetNameConfigPath="[assetNameConfigPath]" DictConfig="[dictConfig]" DisplayName="Get config from json file" sap:VirtualizedContainerService.HintSize="484,132" sap2010:WorkflowViewState.IdRef="GetJsonConfig_1" MailRobotSupport="[mailRobotSupport]" PathBotCurrentDirectory="[Directory.GetCurrentDirectory]" ProcessName="[processName]" />
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Create temp directory" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" UnSafe="False" WorkflowFileName="FRAMEWORK/SU_CreateTempDirectory.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[dictConfig("ProcessName")]</InArgument>
                        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="DictConfig">[dictConfig]</InOutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="PathTemp" />
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <af:ClearDirectory DisplayName="Clear temp directory" sap:VirtualizedContainerService.HintSize="484,79" sap2010:WorkflowViewState.IdRef="ClearDirectory_3" PathToBeCleared="[dictConfig(&quot;PathTemp&quot;)]" />
                    <ui:Comment DisplayName="Comment-If create summary" sap:VirtualizedContainerService.HintSize="484,93" sap2010:WorkflowViewState.IdRef="Comment_19" Text="// Summary report send out is being enabled or disabled by changing 'FlagSummaryReport' key in config.json file." />
                    <If Condition="[CBOOL(dictConfig(&quot;FlagSummaryReport&quot;))]" DisplayName="If create summary" sap:VirtualizedContainerService.HintSize="484,595" sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Then>
                        <Sequence DisplayName="Create summary datatable" sap:VirtualizedContainerService.HintSize="376,418" sap2010:WorkflowViewState.IdRef="Sequence_50">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Comment DisplayName="Comment-Create summary datatable" sap:VirtualizedContainerService.HintSize="334,207" sap2010:WorkflowViewState.IdRef="Comment_9" Text="// Standard ARF summary set of columns is 'ItemId', 'Status', 'RetryNr', 'ErrorCategory', 'ErrorType', 'ErrorCode', 'ErrorMessage' and 'Progress' - *do not remove default ones*. You can create additional columns according to your needs. Be aware to add those additional columns handling to 'PR_UpdateSummaryDt.xaml' file which is invoked in process-finally state machine." />
                          <ad:InitDatatable ArrColumnNames="[{&quot;ItemId&quot;, &quot;Status&quot;, &quot;RetryNr&quot;, &quot;ErrorCategory&quot;, &quot;ErrorType&quot;, &quot;ErrorCode&quot;, &quot;ErrorMessage&quot;,&quot;Progress&quot;, &quot;MailSubject&quot;,&quot;MailSender&quot;, &quot;AttachmentPdf&quot;,&quot;MatchedPolicies&quot;, &quot;MatchedPolicyNr&quot;,&quot;MatchedPolicyIndicator&quot;, &quot;Timestamp&quot;, &quot;PathEmail&quot;}]" DisplayName="Init summary datatable" DtOutput="[dtSummary]" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="InitDatatable_3" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get list of policies" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" UnSafe="False" WorkflowFileName="SUPPORT\SU_GetListOfPolicies.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="s:String[]" x:Key="ArrPolicies">[arrPolicies]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="PathPoliciesFile">[dictConfig("PathPoliciesFile")]</InArgument>
                        <InArgument x:TypeArguments="x:Int32" x:Key="PolicyLengthTreshold">[CINT(dictConfig("PolicyLengthTreshold"))]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="SheetNamePoliciesFile">[dictConfig("PoliciesFileSheetName")]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="HeaderNamePoliciesFile">[dictConfig("PoliciesFileHeaderName")]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" DisplayName="Log init begin" FlagInfo="True" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Logging_26" LogMessage="Initializing environment" />
                </If.Else>
              </If>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Clear process environment" sap:VirtualizedContainerService.HintSize="771,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="PROCESS\PR_ClearProcessEnvironment.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Launch process environment" sap:VirtualizedContainerService.HintSize="771,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="PROCESS/PR_LaunchProcessEnvironment.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <OutArgument x:TypeArguments="x:Boolean" x:Key="FlagNoNewItems">[flagNoNewItems]</OutArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="DictConfig">[dictConfig]</InArgument>
                  <InArgument x:TypeArguments="x:Boolean" x:Key="FlagCheckIfNewItems">[CBOOL(dictConfig("FlagCheckIfNewItems"))]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" DisplayName="Log init finished" FlagInfo="True" sap:VirtualizedContainerService.HintSize="771,22" sap2010:WorkflowViewState.IdRef="Logging_27" LogMessage="Environment initialized" />
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="817,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Catch init" sap:VirtualizedContainerService.HintSize="385,646" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Temp path - used only in case of init state error" Name="pathTemp" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign error flag" sap:VirtualizedContainerService.HintSize="343,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[flagInitError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Create temp directory" sap:VirtualizedContainerService.HintSize="343,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="FRAMEWORK/SU_CreateTempDirectory.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[processName]</InArgument>
                      <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="DictConfig" />
                      <OutArgument x:TypeArguments="x:String" x:Key="PathTemp">[pathTemp]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:Comment DisplayName="Comment-catch init" sap:VirtualizedContainerService.HintSize="343,150" sap2010:WorkflowViewState.IdRef="Comment_11" Text="// Choose init state flow logic for error mail send out and screenshot creation. For more details about each scenario ID behaviour - open below file 'SU_CatchGeneralError'. By default in init state each exception will result with mail send out with screenshot" />
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Handle init error" sap:VirtualizedContainerService.HintSize="343,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="FRAMEWORK/SU_CatchGeneralError.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[processName]</InArgument>
                      <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionObject">[exception]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="DefaultErrorCode">G0001</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="PathScreenshotDirectory">[pathTemp]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="MailRecipient">[mailRobotSupport]</InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="MailSendoutScenarioID">1</InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="ScreenshotCreationScenarioID" />
                      <InArgument x:TypeArguments="x:String" x:Key="StatusName">INITIALIZE ERROR</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">182.5,131</av:Point>
          <av:Size x:Key="ShapeSize">195,118</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">160.60000000000002</x:Double>
          <x:Double x:Key="StateContainerHeight">25</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="Error or no items" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">377.5,195.9 610,195.9 610,331</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID0</x:Reference>
          </Transition.To>
          <Transition.Condition>[flagInitError Or flagNoNewItems]</Transition.Condition>
        </Transition>
        <Transition DisplayName="Start processing" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">309.25,249 309.25,279 311.4,279 311.4,331</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">51</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">42</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>[NOT(flagInitError) And NOT(flagNoNewItems)]</Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Get data for further processing.  Quit if there is no data to be processed." DisplayName="Get data state" sap:VirtualizedContainerService.HintSize="228,118" sap2010:WorkflowViewState.IdRef="State_3">
              <State.Entry>
                <Sequence DisplayName="Get transaction data" sap:VirtualizedContainerService.HintSize="746,1326" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ShouldStop sap:VirtualizedContainerService.HintSize="704,22" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[flagStop]" />
                  <If Condition="[flagStop]" DisplayName="If should stop" sap:VirtualizedContainerService.HintSize="704,741" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" DisplayName="Log Orchestrator stop" FlagInfo="True" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Logging_28" LogMessage="Bot has been stopped via Orchestrator" />
                    </If.Then>
                    <If.Else>
                      <TryCatch DisplayName="TC get data" sap:VirtualizedContainerService.HintSize="459,583" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                        <TryCatch.Try>
                          <Sequence DisplayName="Get data" sap:VirtualizedContainerService.HintSize="421,356" sap2010:WorkflowViewState.IdRef="Sequence_57">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Comment DisplayName="Comment-Get data" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="Comment_15" Text="// Choose get processing data flow logic. For more details about each scenario ID behaviour - open below file 'PR_HandleGetProcessingData'" />
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Handle get processing data" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" UnSafe="False" WorkflowFileName="PROCESS/PROCESS_FRAMEWORK/PR_HandleGetProcessingData.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:Int32" x:Key="GetProcessingDataScenarioID">3</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="DictConfig">[dictConfig]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="ProcessingData">[processingData]</InOutArgument>
                                <OutArgument x:TypeArguments="ui:QueueItem" x:Key="TransactionQueueItem">[transactionQueueItem]</OutArgument>
                                <OutArgument x:TypeArguments="sd:DataRow" x:Key="TransactionData">[transactionData]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="425,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Catch get transaction" sap:VirtualizedContainerService.HintSize="376,494" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:Comment DisplayName="Comment-catch get data" sap:VirtualizedContainerService.HintSize="334,150" sap2010:WorkflowViewState.IdRef="Comment_12" Text="// Choose get state flow logic for error mail send out and screenshot creation. For more details about each scenario ID behaviour - open below file 'SU_CatchGeneralError'. By default in get state each exception will result with mail send out with screenshot." />
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Handle get transaction error" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="FRAMEWORK/SU_CatchGeneralError.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[dictConfig("ProcessName")]</InArgument>
                                    <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionObject">[exception]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="DefaultErrorCode">G0002</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="PathScreenshotDirectory">[dictConfig("PathTemp")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="MailRecipient">[dictConfig("Asset_RobotSupportMail")]</InArgument>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="MailSendoutScenarioID">1</InArgument>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="ScreenshotCreationScenarioID" />
                                    <InArgument x:TypeArguments="x:String" x:Key="StatusName">GET DATA ERROR</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign DisplayName="Assign get error flag" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[flagGetDataError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </If.Else>
                  </If>
                  <If Condition="[transactionQueueItem is nothing]" DisplayName="If transaction empty" sap:VirtualizedContainerService.HintSize="704,391" sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Then>
                      <Sequence DisplayName="No more items" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_56">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign flag stop" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[flagStop]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                        <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" DisplayName="Log no more items" FlagInfo="True" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Logging_29" LogMessage="No transaction data" />
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">186,331</av:Point>
                  <av:Size x:Key="ShapeSize">228,118</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">194.20000000000005</x:Double>
                  <x:Double x:Key="StateContainerHeight">25</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="Stop or error" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">414,390 543,390</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">37</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[flagStop or flagGetDataError]</Transition.Condition>
                </Transition>
                <Transition DisplayName="New item" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">357,449 357,479 358.3,479 358.3,559.6</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">58</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>[NOT flagStop and NOT flagGetDataError]</Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Process transaction data. Set success or error status. Log execution message." DisplayName="Process data state" sap:VirtualizedContainerService.HintSize="648,2009" sap2010:WorkflowViewState.IdRef="State_4">
                      <State.Entry>
                        <TryCatch DisplayName="TC process data" sap:VirtualizedContainerService.HintSize="602,1564" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                          <TryCatch.Variables>
                            <Variable x:TypeArguments="s:DateTime" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;UTC datetime of single transaction start" Name="startTransactionTime" />
                          </TryCatch.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Try process transaction" sap:VirtualizedContainerService.HintSize="418,734" sap2010:WorkflowViewState.IdRef="Sequence_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Add process log fields" sap:VirtualizedContainerService.HintSize="376,490" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;ItemId - queue item reference" Name="itemId" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:Comment DisplayName="Comment Assign and add process log fields" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="Comment_10" Text="// Standard process level ARF custom log fields. You can add additional log fields according to your needs. Remember to remove those log fields in Finally block." />
                                <Assign DisplayName="Assign item id" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[itemId]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[transactionQueueItem.Reference]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ad:GetCurrentTimestamp StringTimestampUTC="{x:Null}" DatetimeTimestampUTC="[startTransactionTime]" DisplayName="Get current timestamp" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="GetCurrentTimestamp_2" />
                                <ui:AddLogFields DisplayName="Add process log fields" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
                                  <ui:AddLogFields.Fields>
                                    <InArgument x:TypeArguments="x:String" x:Key="ItemId">[itemId]</InArgument>
                                  </ui:AddLogFields.Fields>
                                </ui:AddLogFields>
                                <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" DisplayName="Log processing begin" FlagInfo="True" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Logging_30" LogMessage="[&quot;Starting processing: &quot; + itemId]" />
                              </Sequence>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Process transaction" sap:VirtualizedContainerService.HintSize="376,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="PROCESS\PR_ProcessTransaction.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="DictConfig">
                                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="dictConfig" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="TransactionQueueItem">
                                    <mva:VisualBasicValue x:TypeArguments="ui:QueueItem" ExpressionText="transactionQueueItem" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="s:String[]" x:Key="ArrPolicies">
                                    <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="arrPolicies" />
                                  </InArgument>
                                  <OutArgument x:TypeArguments="x:Decimal" x:Key="ValueHighestIndicator">
                                    <mva:VisualBasicReference x:TypeArguments="x:Decimal" ExpressionText="valueHighestIndicator" />
                                  </OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="PolicyNrHighestIndicator">
                                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="policyNrHighestIndicator" />
                                  </OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="IndicatorJsonString">
                                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="indicatorJsonString" />
                                  </OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="PathEmail">
                                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="pathEmail" />
                                  </OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="568,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Catch process transaction" sap:VirtualizedContainerService.HintSize="387,551" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Get exceptionProcessing" sap:VirtualizedContainerService.HintSize="345,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[exceptionProcessing]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:Comment DisplayName="Comment-catch process data" sap:VirtualizedContainerService.HintSize="345,207" sap2010:WorkflowViewState.IdRef="Comment_13" Text="// Choose process state flow logic for error mail send out, screenshot creation, error in row control and environment reset. Remember that screenshot creation is dependant from mail send out and it will be performed only if mail send out is enabled. For more details about each scenario ID behaviour - open below file 'PR_CatchProcessingError'" />
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Handle process transaction error" sap:VirtualizedContainerService.HintSize="345,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="FRAMEWORK/PR_CatchProcessingError.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionObject">[exceptionProcessing]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="PathScreenshotDirectory">[dictConfig("PathTemp")]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="MailRecipient">[dictConfig("Asset_BusinessMail")]</InArgument>
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="FlagResetEnvironment">[flagResetEnvironment]</OutArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="ResetEnvironmentScenarioID">1</InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="MailSendoutScenarioID" />
                                      <InArgument x:TypeArguments="x:Int32" x:Key="ScreenshotCreationScenarioID" />
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="FlagErrorInRowLimitReached">[flagErrorInRowLimitReached]</OutArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="CounterErrorInRow">[counterErrorsInRow]</InOutArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="ErrorInRowScenarioID">1</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="DictConfig">[dictConfig]</InArgument>
                                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="TransactionQueueItem">[transactionQueueItem]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                          <TryCatch.Finally>
                            <TryCatch DisplayName="TC process transaction - finally" sap:VirtualizedContainerService.HintSize="564,1337" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                              <TryCatch.Try>
                                <Sequence DisplayName="Finally Processing state" sap:VirtualizedContainerService.HintSize="526,1110" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <al:LogTransactionStatus DisplayName="Log transaction status" ExceptionObject="[exceptionProcessing]" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="LogTransactionStatus_1" StartTime="[startTransactionTime]" TransactionQueueItem="[transactionQueueItem]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </al:LogTransactionStatus>
                                  <ui:Comment DisplayName="Comment Finally Processing state" sap:VirtualizedContainerService.HintSize="484,74" sap2010:WorkflowViewState.IdRef="Comment_16" Text="// In case you have added additional log fields remove those log fields in below activity." />
                                  <ui:RemoveLogFields DisplayName="Remove process log fields" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="RemoveLogFields_1">
                                    <ui:RemoveLogFields.Fields>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String">ItemId</InArgument>
                                      </scg:List>
                                    </ui:RemoveLogFields.Fields>
                                  </ui:RemoveLogFields>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Set transation item status" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_49" UnSafe="False" WorkflowFileName="FRAMEWORK/PR_SetTransactionStatus.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionArgument">[exceptionProcessing]</InArgument>
                                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="TransactionItem">[transactionQueueItem]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="IndicatorJsonString">[indicatorJsonString]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <If Condition="[Not IsNothing(dtSummary)]" DisplayName="If update summary" sap:VirtualizedContainerService.HintSize="484,289" sap2010:WorkflowViewState.IdRef="If_8">
                                    <If.Then>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Update Summary datatable" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" UnSafe="False" WorkflowFileName="PROCESS/PROCESS_FRAMEWORK/PR_UpdateSummaryDt.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionArgument">
                                            <mva:VisualBasicValue x:TypeArguments="s:Exception" ExpressionText="exceptionProcessing" />
                                          </InArgument>
                                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="DtSummary">
                                            <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dtSummary" />
                                          </InOutArgument>
                                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="TransactionItem">
                                            <mva:VisualBasicValue x:TypeArguments="ui:QueueItem" ExpressionText="transactionQueueItem" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:Decimal" x:Key="ValueHighestIndicator">
                                            <mva:VisualBasicValue x:TypeArguments="x:Decimal" ExpressionText="valueHighestIndicator" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="PolicyNrHighestIndicator">
                                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="policyNrHighestIndicator" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="IndicatorJsonString">
                                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="indicatorJsonString" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="MailSubject">
                                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TransactionQueueItem.SpecificContent(&quot;MailSubject&quot;).ToString" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="MailSender">
                                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TransactionQueueItem.SpecificContent(&quot;MailSender&quot;).ToString" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="AttachmentPdf">
                                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TransactionQueueItem.SpecificContent(&quot;AttachmentName&quot;).ToString" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="PathEmail">
                                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="pathEmail" />
                                          </InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </If.Then>
                                  </If>
                                  <If Condition="[IsNothing(exceptionProcessing)]" DisplayName="If no error - reset counter" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_9">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Assign DisplayName="Reset errors in row counter" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[counterErrorsInRow]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <al:Logging ErrorCode="{x:Null}" ErrorDescription="{x:Null}" ExceptionObject="{x:Null}" DisplayName="Log processing end" FlagInfo="True" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Logging_31" LogMessage="[&quot;Ended processing: &quot; + transactionQueueItem.Reference]" />
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="530,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Handle process finally exception" sap:VirtualizedContainerService.HintSize="376,510" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:Comment DisplayName="Comment-catch process finally data" sap:VirtualizedContainerService.HintSize="334,169" sap2010:WorkflowViewState.IdRef="Comment_14" Text="// Choose process state-finally flow logic for error mail send out and screenshot creation. For more details about each scenario ID behaviour - open below file 'SU_CatchGeneralError'. By default in process-finally state each exception will result with mail send out with screenshot" />
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Handle finally error" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="FRAMEWORK/SU_CatchGeneralError.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[dictConfig("ProcessName")]</InArgument>
                                          <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionObject">[exception]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="DefaultErrorCode">G0003</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="PathScreenshotDirectory">[dictConfig("PathTemp")]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="MailRecipient">[dictConfig("Asset_RobotSupportMail")]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="MailSendoutScenarioID">1</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="ScreenshotCreationScenarioID" />
                                          <InArgument x:TypeArguments="x:String" x:Key="StatusName">FINALIZE PROCESSING ERROR</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <Assign DisplayName="Assign process finalize error flag" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[flagProcessFinalizeError]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </TryCatch.Finally>
                        </TryCatch>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">182.8,559.6</av:Point>
                          <av:Size x:Key="ShapeSize">234,118</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">199.80000000000007</x:Double>
                          <x:Double x:Key="StateContainerHeight">25</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="Error limit or finally error" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">416.8,618.6 610,618.6 610,449</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                          <Transition.Condition>[flagErrorInRowLimitReached Or flagProcessFinalizeError]</Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Next item" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">241.3,559.6 241.3,529.6 243,529.6 243,449</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">18</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">19</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID1</x:Reference>
                          </Transition.To>
                          <Transition.Condition>[NOT(flagResetEnvironment OR flagErrorInRowLimitReached)]</Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Reset env" sap:VirtualizedContainerService.HintSize="450,242" sap2010:WorkflowViewState.IdRef="Transition_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">182.8,600.9 152.8,600.9 152.8,207.7 182.5,207.7</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">25</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">49</x:Int32>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID2</x:Reference>
                          </Transition.To>
                          <Transition.Condition>[flagResetEnvironment And NOT flagErrorInRowLimitReached AND NOT flagProcessFinalizeError]</Transition.Condition>
                        </Transition>
                      </State.Transitions>
                      <State.Variables>
                        <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;True if environment must be reset" Name="flagResetEnvironment" />
                        <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Processing exception object" Name="exceptionProcessing" />
                        <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="[OPTIONAL]&#xA;True if errors in row limit reached" Name="flagErrorInRowLimitReached" />
                        <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;True if any error encountered at process-finalize state" Name="flagProcessFinalizeError" />
                        <Variable x:TypeArguments="x:Decimal" Name="valueHighestIndicator" />
                        <Variable x:TypeArguments="x:String" Name="policyNrHighestIndicator" />
                        <Variable x:TypeArguments="x:String" Name="indicatorJsonString" />
                        <Variable x:TypeArguments="x:String" Name="pathEmail" />
                      </State.Variables>
                    </State>
                  </Transition.To>
                </Transition>
              </State.Transitions>
              <State.Variables>
                <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;True if no more new items to process or Orchestrator stop was requested" Name="flagStop" />
                <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;True if any error encountered at get state" Name="flagGetDataError" />
              </State.Variables>
            </State>
          </Transition.To>
        </Transition>
      </State.Transitions>
      <State.Variables>
        <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;True if any error encountered at init state" Name="flagInitError" />
        <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="[OPTIONAL]&#xA;Functionality useful for QE-type bot. True if no new items in queue at init state" Name="flagNoNewItems" />
      </State.Variables>
    </State>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Configuration dictionary" Name="dictConfig" />
      <Variable x:TypeArguments="ui:QueueItem" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Orchestrator queue item" Name="transactionQueueItem" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="[REQUIRED]&#xA;Summary datatable" Name="dtSummary" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="[OPTIONAL]&#xA;Optional functionality to stop bot after certain amount of exceptions in a row. Controlled with 'ErrorsInRowLimit' config key" Name="counterErrorsInRow" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="[REQUIRED for QB-type only]&#xA;Edit variable type to correct one dependent on get processing data scenario type. For instance if QB-datatable type bot then variable type should be set to System.Datatable. For QE type bot this variable is usually unused" Name="processingData" />
      <Variable x:TypeArguments="sd:DataRow" sap2010:Annotation.AnnotationText="[REQUIRED for QB-type only]&#xA;Edit variable type to correct one dependent on get processing data scenario type. For instance if QB-datatable type bot then variable type should be set to System.DataRow. For QE type bot this variable is usually unused" Name="transactionData" />
      <Variable x:TypeArguments="s:String[]" Name="arrPolicies" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>